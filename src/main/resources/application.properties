# datasource
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3307/proposta}
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# feign
feign.client.config.consultaRestricao.read-timeout=200
feign.client.config.consultaRestricao.connect-timeout=200

# actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,prometheus,metric
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:propostas}
management.metrics.tags.ambiente=${AMBIENTE:dev}

info.app.name=@project.name@
info.app.description=@project.description@
info.app.version=@project.version@

management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

management.health.status.http-mapping.UP=200
management.health.status.http-mapping.down=503
management.health.status.http-mapping.fatal=503
management.health.status.http-mapping.out-of-service=503

# jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name: propostas}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# servi√ßos externos
zup.analisefinanceira=${ANALISE_FINANCEIRA_URL:http://localhost:9999}
zup.cartaoresource=${CARTAO_RESOURCE_URL:http://localhost:8888}

# schedule delays
delay.scheduled.cartao=${DELAY_SCHEDULED_CARTAO:10000}
delay.scheduled.notifica.bloqueio=${DELAY_SCHEDULED_NOTIFICA_BLOQUEIO:10000}

# spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://keycloak:8080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://keycloak:8080/auth/realms/proposta/protocol/openid-connect/certs}

# profile
spring.profiles.active="${SPRING_PROFILES_ACTIVE:dev}"
